<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-wEmeIV1mKuiNpC+IOBjI7aAzPcEZeedi5yW5f2yOq55WWLwNGmvvx4Um1vskeMj0" crossorigin="anonymous">
<link href='https://use.fontawesome.com/releases/v5.0.6/css/all.css' rel='stylesheet'>
<link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/fullcalendar@5.6.0/main.min.css'>

<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.20.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js"></script>

<link rel='stylesheet' href='styling/portal.css'>
<link rel='stylesheet' href='styling/schedule.css'>

<script>
	function validFreetime(date,from,to) {
		var freetimeError = document.getElementById("freetimeError");
		//var reservationError =  document.getElementById("reservationError");
		freetimeError.innerHTML = "";
		//reservationError.innerHTML = "";
		var freeTime = Array.from(<%- JSON.stringify(freeTime) %>)
  		var reservations = Array.from(<%- JSON.stringify(reservations) %>)
		from = from.concat(":00")
		to = to.concat(":00")
		const sdate = date.concat("T", from)
		const start = +new Date(sdate)
		const edate = date.concat("T", to)
		var end = +new Date(edate)
		if((end - start) <= 0) {
			var d = new Date(end);
			end = d.setDate(d.getDate() + 1);
		}
		for(var i=0; i<freeTime.length; i++){
		if(freeTime[i].start == start && freeTime[i].end == end ||
			freeTime[i].start <= start && freeTime[i].end == end ||
			freeTime[i].start == start && freeTime[i].end >= end ||
			freeTime[i].start <= start && freeTime[i].end >= end) {	
				freetimeError.innerHTML = "Cannot save free time on free time object.";
			}
		}
		for(var i=0; i<reservations.length; i++){
			if(reservations[i].start == start && reservations[i].end == end ||
				reservations[i].start <= start && reservations[i].end == end ||
				reservations[i].start == start && reservations[i].end >= end ||
				reservations[i].start <= start && reservations[i].end >= end) {	
					freetimeError.innerHTML = "Cannot save free time on reservation object.";
				}
		}
	}
	function validationFreetime() {
		let to = document.getElementById("to").value;
		let from = document.getElementById("from").value
		let date = document.getElementById("date").value
		validFreetime(date,from,to)
	}


</script>

<!--Add free time button-->
<button class="fc-dayGridMonth-button btn btn-primary" onclick="freetimePopup()" id='plus' type='submit'>+</button>

<!--calendar-->
<div id='calendar'></div>
<!--Add free time popup-->
<form action="addFreeTime" method="post">
	<div id="freetimePopup" class="modal">
		<div class="modal-content">
			<div class="modal-title" style='font-size:xx-large; font-size:xx-large;'>
			Add free time
			<span class="close" onclick='closeFreetime()'>&times;</span>			 
			</div>
			<div id="dates">
				<div class="info-box" style='margin-left: 35px;'>
					<label for="adults">Date</label>
					<% let date = (new Date()).toISOString().split('T')[0] %>	
					<input type="date" min='<%= date %>' onchange="validationFreetime()" id="date" name="date" >
					<script>
						var today = new Date();
						document.getElementById("date").valueAsDate = today;
					</script>
				</div>
				<div class="info-box">
					<label for="children">From</label>
					<select id="from" onchange="validationFreetime()" class='selectpicker' name="from">
						<% for(var i = 0 ; i < times.length ; i++) { %>
							<option><%= times[i] %></option>
						<% }; %>
					</select>
				</div>
				<div class="info-box" style='margin-right: 35px;'>
					<label for="children" class='selectpicker' name='to'>To</label>
					<select  onchange="validationFreetime()" id="to" name="to">
						<% for(var i = 0 ; i < times.length ; i++) { %>
							<option><%= times[i] %></option>
						<% }; %>
					</select>
					<br>
				</div>
			</div>
			<h5 style='font-size: 15px; color:brown !important;' id="freetimeError"></h5>
			<button class="btn btn-primary btn-sm border rounded-pill float-center align-content-center" onclick='validationFreetime()' id='add' type="submit">Add</button>
			<br>		
		</div>
	</div>
</form>
</br>
<!--Legend-->
<ul style='border-color:rgb(195, 39, 39); margin-top: 10px;'>
		<li class="Legend-item">
		  <span class="Legend-colorBox" style="background-color: green;">
		  </span>
		  <span class="Legend-label">
			Free time
		  </span>
		</li>
		<li class="Legend-item"style='margin-left:20px;'>
			<span class="Legend-colorBox" style="background-color: red;">
			</span>
			<span class="Legend-label">
			  Reservations
			</span>
		  </li>
</ul>	

<!--Statistical info button-->
<button class="fc-dayGridMonth-button btn btn-primary" onclick="createchart()"id='statis' type='submit'>Staticstical info</button>
<!--Statistical info popup-->
<div id="statisticalPopup" class="modal">
	<div class="modal-content">
		<span class="close" onclick='closepStatistical()'>&times;</span> 
		<div style="width:100%;">
			<canvas id="canvas"></canvas>
			<label for="children" style='color: #573b8a; font-weight: bold;'>Year</label>
			<select id="year" style='width: 25%; height: 1%; border-radius:20px; text-align: center; right: 50%;' onchange='createchart()' class='selectpicker'>
				<% var year = new Date() %>
				<% var years = [year.getFullYear(), year.getFullYear()-1, year.getFullYear()-2] %>
				<% for(var i = 0 ; i < years.length ; i++) { %>
					<option><%= years[i] %></option>
				<% }; %>
			</select>
		</div>

	</div>
</div>

<!--Reservation info popup-->
<form action="cancelReservation" method="post">
	<div id="reservationPopup" class="modal">
		<div class="modal-content">
			<div class="modal-title" style='font-size:xx-large; font-size:xx-large; margin-bottom: 15px; color: #573b8a;'>
				Reservation Information
				<span class="close" onclick='closeReservation()'>&times;</span>			 
			</div>
			<input name='emailProvider' id='emailProvider' value='' style='display: none;'/>
			<input name='emailClient' id='emailClient' value='' style='display: none;'/>
			<input name='rID' id='rID' value='' style='display: none;'/>
			<span id='startR'></span>
			<span id='endR'></span>
			<span id='address'></span>
			<span id='clientFullName'></span>
			<span id='clientEmail'></span>
			<span id='providerPhone'></span>
			<span id='providerPrice'></span>
			<button class="btn btn-primary btn-sm border rounded-pill float-center align-content-center" style='width: 35%;' id='add' type="submit">Cancel reservation</button>
			<br>	
		</div>
	</div>
</form>
<form action="cancelFreeTime" method="post">
	<!--Free time info popup-->
	<div id="freePopup" class="modal">
		<div class="modal-content">
			<div class="modal-title" style='font-size:xx-large; font-size:xx-large; margin-bottom: 15px; color: #573b8a;'>
				Free Time Information
				<span class="close" onclick='closeFree()'>&times;</span>			 
			</div>
			<input name='fID' id='fID' value='' style='display: none;'/>
			<span id='startF'></span>
			<span id='endF'></span>
			<button class="btn btn-primary btn-sm border rounded-pill float-center align-content-center" style='width: 35%;' type='submit' id='cancel' >Cancel free time</button>
			<br>	
		</div>
	</div>
</form>

<!--calendar script-->
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@5.6.0/main.min.js'></script>
<script>

//Add free time popup
function freetimePopup() {
	document.getElementById('freetimePopup').style.display ='block';
};
// When the user clicks on <span> (x), close the modal
function closeFreetime() {
		document.getElementById('freetimePopup').style.display = 'none';
};


function getStatistics(type) {
	var e = document.getElementById("year");
	//the selected year from the dropdoen list
	var text = e.options[e.selectedIndex].text;
	//the reservations list of the relevant provider
	var reservations = <%- JSON.stringify(reservations) %>;
	//today date
	var today = new Date();
	var month = []
	if(reservations != null) {
		for(var m=1; m<13; m++) {
			var statistics = [];
			var sum = 0;
			var flag = false;
			for(var i=0; i<reservations.length; i++) {
				//get date with the year of the selected year from the dropdown list
				var selectedYear = new Date(text)
				//get the year from the current reservation
				var year = new Date(reservations[i].start)
				//chack if the reservation passed and if the selected year is like the year of the reservation
				if(reservations[i].start <= today && year.getFullYear() == selectedYear.getFullYear() && year.getMonth()+1 == m) {
					for(var j=0; j<reservations[i].typeS.length; j++) {
						if(reservations[i].typeS[j] == type) {
							if(reservations[i].typeS.length == 2) {
								flag = true;
							}
							statistics.push(reservations[i])
						}
					}
				}
			}
			for(var i=0; i<statistics.length; i++) {
				sum += (statistics[i].price)*(Math.abs(statistics[i].end-statistics[i].start)/36e5)
				if(flag == true) {
					//if the sum is for two service - for take to walk and keep at home cut the sum by half
					sum = sum/2;
				}
			}
			month[m-1] = sum
		}
	}
	flag = false;
	return month;
}

function createchart() {
	var timeFormat = 'YYYY-MM-DD';
	const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
	const data = {
		labels: labels,
		datasets: [
			{
				label: "Take for a walk",
				backgroundColor: "blue",
				data: getStatistics("Take for a walk")
			},
			{
				label: "Keep at home",
				backgroundColor: "orange",
				data: getStatistics("Keep at home")
			},
		]
	};
	var config = {
		type: 'bar',
		data: data,
		options: {
			legend: {
				labels: {
                    fontColor: "#573b8a",
                    fontSize: 15,
					fontFamily: "Nunito"
                }
        	},
			title: {
				display: true,
				text: "Statistical information",
				fontColor: "#573b8a",
				fontSize: 35,
				fontStyle: "bolder",
				fontFamily: "Nunito"
				
			},
			scales: {
				xAxes: [{
					ticks: {
						fontColor: "#573b8a",
						autoSkip: false,
						fontSize: 14,
						fontFamily: "Nunito"
					}
				}],
				yAxes: [{
					ticks: {
						fontColor: "#573b8a",
						min: 0,
						
						fontSize: 14,
						fontFamily: "Nunito"
					}
				}],
				y: {
					beginAtZero: true,
					
				}
			}
		},
	};

	var ctx = document.getElementById("canvas").getContext("2d");
	if(window.chart != undefined)
  		window.chart.destroy();
	window.chart = new Chart(ctx, config);


	document.getElementById('statisticalPopup').style.display ='block';
}

// When the user clicks on <span> (x), close the modal
function closepStatistical() {
		document.getElementById('statisticalPopup').style.display = 'none';
};

//Reservation info popup
function reservationPopup(start, end, clientName, emailClient, emailProvider, clientPhone, price, address, id) {
	document.getElementById("rID").value = id;
	document.getElementById("emailProvider").value = emailProvider;
	document.getElementById("emailClient").value = emailClient;
	document.getElementById("clientFullName").innerHTML = "The name of the client \u27A1\uFE0F " + clientName;
    document.getElementById("clientEmail").innerHTML = "The email of the client \u27A1\uFE0F " +  emailClient;
	document.getElementById("providerPhone").innerHTML = "The phone of the client \u27A1\uFE0F " +  clientPhone;
	document.getElementById("providerPrice").innerHTML = "The price per hour for the service \u27A1\uFE0F " +  price;
	document.getElementById("address").innerHTML = "The address \u27A1\uFE0F " + address;
    document.getElementById("startR").innerHTML = "The start time \u27A1\uFE0F " +  start.toLocaleString();
	document.getElementById("endR").innerHTML = "The end time \u27A1\uFE0F " +  end.toLocaleString();
	document.getElementById('reservationPopup').style.display ='block';
};

// When the user clicks on <span> (x), close the modal
function closeReservation() {
	document.getElementById('reservationPopup').style.display = 'none';
};

//Free time info popups
function freePopup(start, end, id) {
	
	document.getElementById("fID").value = id;
	document.getElementById("startF").innerHTML = "The start time \u27A1\uFE0F " +  start.toLocaleString();
    document.getElementById("endF").innerHTML = "The end time \u27A1\uFE0F " +  end.toLocaleString();
	document.getElementById('freePopup').style.display ='block';

};

// When the user clicks on <span> (x), close the modal
function closeFree() {
	document.getElementById('freePopup').style.display = 'none';
};

function cancelFreetime(){
		var event = document.getElementById("freeTimeID").value;
		event.remove();
}


document.addEventListener('DOMContentLoaded', function() {
  var calendarEl = document.getElementById('calendar');
  var freeTime = Array.from(<%- JSON.stringify(freeTime) %>)
  var reservations = Array.from(<%- JSON.stringify(reservations) %>)
  var calendar = new FullCalendar.Calendar(calendarEl, {
    initialView: 'dayGridMonth',
    initialDate: new Date(),
    themeSystem: "bootstrap",
    headerToolbar: {
      left: 'prev,next today',
      center: 'title',
      right: 'dayGridMonth,timeGridWeek,timeGridDay'
    },
	
    events: freeTime.concat(reservations),
	
	eventClick: function(info) {
		if(info.event.title == "Reservation") {
			reservationPopup(info.event.start, info.event.end, info.event.extendedProps.clientName, 
		info.event.extendedProps.clientEmail, info.event.extendedProps.providerEmail, info.event.extendedProps.clientPhone, info.event.extendedProps.price, 
		info.event.extendedProps.address, info.event.id);
		}
		else {
			freePopup(info.event.start, info.event.end, info.event.id);
		}
		
    },
});
  calendar.render();
});

</script>